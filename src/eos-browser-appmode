#!/usr/bin/python3
#
# eos-browser-appmode: takes an URI like webapp:<WM_CLASS>@<ACTUAL_URI>,
# parses it and and launches the default browser with the actual uri.
# This script is deprecated and kept for backwards-compatibility purposes,
# new code should use "gio open <ACTUAL_URI>" directly instead.
#
# Copyright (C) 2016-2020 Endless OS Foundation LLC
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

import os
import sys


class ParsingError(Exception):
   def __init__(self, value):
      Exception.__init__(self)
      self.value = value

   def __str__(self):
      return repr(self.value)


def parseURI(uri):
   if not str.startswith(uri, 'webapp:'):
      raise ParsingError('Wrong URI scheme')

   # Get the application ID, to be used to set WM_CLASS,
   # and the URI we want to launch in application mode.
   uri_parts = uri[7:].split('@', 2)
   if len(uri_parts) < 2:
      raise ParsingError('Invalid URI format')

   # First element is the value to be set as WM_CLASS,
   # second element is the actual URI we'll launch.
   return (uri_parts[0], uri_parts[1])


if __name__ == '__main__':
   if len(sys.argv[1:]) < 1:
      print('Missing parameter')
      sys.exit(2)

   custom_uri = sys.argv[1]
   try:
      (wm_class, actual_uri) = parseURI(custom_uri)
   except ParsingError as e:
      print('Error parsing custom URI: {}'.format(e.value))
      print('Usage: eos-browser-appmode webapp:<WM_CLASS>@<URI>')
      exit(2)

   # The first "gio" is the command to execute. The second is its argv[0].
   os.execlp("gio", "gio", "open", actual_uri)
